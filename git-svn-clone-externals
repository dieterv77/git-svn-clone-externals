#!/bin/bash

set -e

toplevel_directory="$(git rev-parse --show-cdup)"
[ -n "$toplevel_directory" ] && { echo "please run from the toplevel directory"; exit 1; }


function call()
{
	cmd="$@"
	echo "$cmd"
	eval "$cmd"
	return "$?"
}

function do_clone()
{
	test -d .git_externals || return 1
	module=`echo $remote_url|sed 's,\(.*\)\(/trunk\|/branch.*\|/tag.*\),\1,'`
	branch=`echo $remote_url|sed 's,\(.*\)\(/trunk\|/branch.*\|/tag.*\),\2,'|sed 's,^/,,'`
	if [[ $branch = $remote_url ]]; then
		branch=""
	fi
 	(
		if [ -d "$local_directory" ]; then
			(
				cd "$local_directory"
				call svn update 
			)
		else
                        call svn checkout "$remote_url" "$local_directory"

		fi
	)
}

function do_link()
{
        curdir=`pwd`
	dir="$1"
	base="$(dirname $dir)"
	(
		mkdir -p .git_externals/"$base"
		ln -sf "$curdir"/"$dir" .git_externals/"$dir"
	)
}

function do_excludes()
{
	dir="$1"
	git_excludes_path=.git/info/exclude
	if ! grep -q '^.git_externals$' "$git_excludes_path"
	then
		echo .git_externals >> "$git_excludes_path"
	fi

	if ! grep -q '^'"$dir"'$' "$git_excludes_path"
	then
		echo "$dir" >> "$git_excludes_path"
	fi
}

function is_excluded()
{
    local result=0
    if [ -f .git_externals_exclude ] ; then
        matches=`grep -v "^#" .git_externals_exclude|grep "^/$1$"|wc -l`
        if [ $matches -gt 0 ] ; then
            local result=1
        fi
    fi
    echo $result 
    return
}


git svn show-externals|grep -vE '#|^$'| \
	sed 's/\(-r\)[ ]*\([0-9]\{1,\}\)/\1\2/'|while read -a words
do
	[ -z "${words[*]}" ] && continue

	local_directory="$(echo ${words[0]}|sed 's,^/,,')"
	remote_url="${words[1]}"

    check_excluded=$(is_excluded $local_directory)

    if [ $check_excluded -eq 0 ] ; then
        if [ -n "${words[2]}" ]; then
            revision="${words[1]}"
            remote_url="${words[2]}"
        fi

        if [ -n "$USE_SSH" ]; then
            echo "Rewriting url to use SVN+SSH."
            shopt -s extglob
            remote_url="${remote_url/+(http|https)/svn+ssh}"
        fi

        [ -z "${remote_url}" ] && continue

        export local_directory revision remote_url

        echo "$local_directory -> $remote_url"

        dir=`dirname $local_directory`
        [ -d ".git_externals/$dir" ] || mkdir -p ".git_externals/$dir"


        do_clone "$revision" "$remote_url" "$local_directory" || exit
        do_link "$local_directory"
        do_excludes "$local_directory"
    fi

done

